'''
    In the shoppingCart services, we need the following tables:
    - ShoppingCart: This table will store the shopping cart information. It will have a one-to-many relationship with the ShoppingCartItem table.
    - ShoppingCartItem: This table will store the items in the shopping cart. It will have a many-to-one relationship with the ShoppingCart table.
    - Customer: This table will store the customer information. It will have a one-to-many relationship with the ShoppingCart table.
    - product: This table will store the product information. It will have a one-to-many relationship with the ShoppingCartItem table.    

    not:
        in the user related tables, id is auto increment, but in the shopping cart related tables, id is generated by uuid .
'''

from sqlalchemy import Column, String, Integer, ForeignKey, Text, DECIMAL, DateTime
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from sqlalchemy.dialects.mysql import CHAR
from sqlalchemy.dialects.postgresql import UUID
import uuid
from datetime import datetime

Base = declarative_base()


# Customer Table
class Customer(Base):
    __tablename__ = 'customers'
    
    user_id = Column(CHAR(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    name = Column(String(50), nullable=False)
    middlename = Column(String(50), nullable=True)
    surname = Column(String(50), nullable=False)
    email = Column(String(100), unique=True, nullable=False)
    password = Column(String(255), nullable=False)
    phone_number = Column(String(20), nullable=True)

    # Define the relationship with the Address table
    addresses = relationship("Address", back_populates="customer", cascade="all, delete-orphan")
    orders = relationship("Order", back_populates="customer")
    shopping_cart = relationship("ShoppingCart", back_populates="customer")


# Address Table
class Address(Base):
    __tablename__ = 'address'

    customer_adres_id = Column(CHAR(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    user_id = Column(CHAR(36), ForeignKey('customers.user_id', ondelete="CASCADE"), nullable=False)  # Foreign key
    street = Column(String(255), nullable=False)
    city = Column(String(100), nullable=False)
    state = Column(String(100), nullable=False)
    zip_code = Column(String(20), nullable=False)
    country = Column(String(50), nullable=False)

    # Relationship with the Customer table
    customer = relationship("Customer", back_populates="addresses")


# Order Table
class Order(Base):
    __tablename__ = 'orders'

    order_id = Column(CHAR(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    customer_id = Column(CHAR(36), ForeignKey('customers.user_id', ondelete="SET NULL"), nullable=True)
    total_price = Column(DECIMAL(10, 2), nullable=False)
    order_date = Column(DateTime, nullable=False, default=datetime.utcnow)
    payment_status = Column(String(50), nullable=False)
    invoice_link = Column(String(255), nullable=True)
    order_status = Column(Integer, nullable=False)

    customer = relationship("Customer", back_populates="orders")
    order_items = relationship("OrderItem", back_populates="order", cascade="all, delete-orphan")  # String-based reference
    delivery = relationship("Delivery", back_populates="order", cascade="all, delete-orphan")


# Order Items Table
class OrderItem(Base):
    __tablename__ = 'order_items'

    order_item_id = Column(CHAR(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    product_id = Column(CHAR(36), ForeignKey('products.product_id'))
    order_id = Column(CHAR(36), ForeignKey('orders.order_id'))
    price_at_purchase = Column(DECIMAL(10, 2), nullable=False)
    quantity = Column(Integer, nullable=False, default=1)

    order = relationship("Order", back_populates="order_items")  # String-based reference
    product = relationship("Product", back_populates="order_items")


# Delivery Table
class Delivery(Base):
    __tablename__ = 'delivery'

    delivery_id = Column(CHAR(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    order_id = Column(CHAR(36), ForeignKey('orders.order_id', ondelete="CASCADE"))
    delivery_status = Column(String(50), nullable=False)
    addres_id = Column(CHAR(36), ForeignKey('address.customer_adres_id', ondelete="SET NULL"))

    order = relationship("Order", back_populates="delivery")
    address = relationship("Address")

class Product(Base):
    __tablename__ = 'products'

    product_id = Column(CHAR(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    name = Column(String(100), nullable=False)
    model = Column(String(50), nullable=False)
    description = Column(Text, nullable=True)
    category_id = Column(Integer, ForeignKey('category.category_id'), nullable=True)
    serial_number = Column(String(100), unique=True, nullable=False)
    quantity = Column(Integer, nullable=False, default=0)
    price = Column(DECIMAL(10, 2), nullable=False, default=0.00)
    cost = Column(DECIMAL(65, 2), nullable=False, default=0.0)
    distributor = Column(String(100), nullable=True)
    image_url = Column(String(255), nullable=True)
    item_sold = Column(Integer, nullable=False, default=0)
    warranty_status = Column(Integer, nullable=True)

    category = relationship("Category", back_populates="products")
    order_items = relationship("OrderItem", back_populates="product", cascade="all, delete-orphan")  # Correctly define the relationship here
    shopping_cart_items = relationship("ShoppingCartItem", back_populates="product", cascade="all, delete-orphan")



# Shopping Cart Table
class ShoppingCart(Base):
    __tablename__ = 'shoppingcart'

    cart_id = Column(CHAR(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    customer_id = Column(CHAR(36), ForeignKey('customers.user_id', ondelete="CASCADE"), nullable=True)
    cart_status = Column(String(50), nullable=False)

    customer = relationship("Customer", back_populates="shopping_cart")
    items = relationship("ShoppingCartItem", back_populates="cart", cascade="all, delete-orphan")


# Shopping Cart Item Table
class ShoppingCartItem(Base):
    __tablename__ = 'shoppingcart_item'

    shopping_cart_item_id = Column(CHAR(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    cart_id = Column(CHAR(36), ForeignKey('shoppingcart.cart_id', ondelete="CASCADE"))
    product_id = Column(CHAR(36), ForeignKey('products.product_id', ondelete="CASCADE"))
    quantity = Column(Integer, nullable=False, default=1)

    cart = relationship("ShoppingCart", back_populates="items")
    product = relationship("Product", back_populates="shopping_cart_items")



# Category Table
class Category(Base):
    __tablename__ = 'category'

    category_id = Column(Integer, primary_key=True, autoincrement=True)
    parentcategory_id = Column(Integer, ForeignKey('category.category_id', ondelete="SET NULL"), nullable=True)
    category_name = Column(String(100), nullable=False)

    parent_category = relationship("Category", remote_side=[category_id], back_populates="subcategories")
    subcategories = relationship("Category", back_populates="parent_category")
    products = relationship("Product", back_populates="category")



from pydantic import BaseModel

#Â pdyanctic model for the cart item which is to be used when adding an item to the cart with certain quantity
class CartItem(BaseModel):
    product_id: str
    quantity: int

# Pydantic model for product quantity adjustments coming from the frontend (for proper type hinting)
class CartAdjustment(BaseModel):
    product_id: str
    customer_id: str


"""
orders:
'orders', 'CREATE TABLE `orders` (\n  `order_id` char(36) NOT NULL DEFAULT (uuid()),\n  `customer_id` char(36) DEFAULT NULL,\n  `total_price` decimal(10,2) NOT NULL,\n  `order_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  `payment_status` varchar(50) NOT NULL,\n  `invoice_link` varchar(255) DEFAULT NULL,\n  `order_status` int NOT NULL,\n  PRIMARY KEY (`order_id`),\n  KEY `customer_id` (`customer_id`),\n  CONSTRAINT `orders_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customers` (`user_id`) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'


order_items:
'order_items', 'CREATE TABLE `order_items` (\n  `order_item_id` char(36) NOT NULL DEFAULT (uuid()),\n  `product_id` char(36) DEFAULT NULL,\n  `order_id` char(36) DEFAULT NULL,\n  `price_at_purchase` decimal(10,2) NOT NULL,\n  `quantity` int NOT NULL DEFAULT \'1\',\n  PRIMARY KEY (`order_item_id`),\n  KEY `product_id` (`product_id`),\n  KEY `order_id` (`order_id`),\n  CONSTRAINT `order_items_ibfk_1` FOREIGN KEY (`product_id`) REFERENCES `products` (`product_id`) ON DELETE CASCADE,\n  CONSTRAINT `order_items_ibfk_2` FOREIGN KEY (`order_id`) REFERENCES `orders` (`order_id`) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

products:
'products', 'CREATE TABLE `products` (\n  `product_id` char(36) NOT NULL DEFAULT (uuid()),\n  `name` varchar(100) NOT NULL,\n  `model` varchar(50) NOT NULL,\n  `description` text,\n  `category_id` int DEFAULT NULL,\n  `serial_number` varchar(100) NOT NULL,\n  `quantity` int NOT NULL DEFAULT \'0\',\n  `warranty_status` int DEFAULT NULL,\n  `distributor` varchar(100) DEFAULT NULL,\n  `image_url` varchar(255) DEFAULT NULL,\n  `price` decimal(10,2) NOT NULL DEFAULT \'0.00\',\n  `item_sold` int NOT NULL DEFAULT \'0\',\n  PRIMARY KEY (`product_id`),\n  UNIQUE KEY `serial_number` (`serial_number`),\n  KEY `category_id` (`category_id`),\n  CONSTRAINT `products_ibfk_1` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

customers:
'customers', 'CREATE TABLE `customers` (\n  `user_id` char(36) NOT NULL DEFAULT (uuid()),\n  `name` varchar(50) NOT NULL,\n  `middlename` varchar(50) DEFAULT NULL,\n  `surname` varchar(50) NOT NULL,\n  `email` varchar(100) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `phone_number` varchar(20) DEFAULT NULL,\n  PRIMARY KEY (`user_id`),\n  UNIQUE KEY `email` (`email`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

category: 
'category', 'CREATE TABLE `category` (\n  `category_id` int NOT NULL AUTO_INCREMENT,\n  `parentcategory_id` int DEFAULT NULL,\n  `category_name` varchar(100) NOT NULL,\n  PRIMARY KEY (`category_id`),\n  KEY `fk_parentcategory` (`parentcategory_id`),\n  CONSTRAINT `fk_parentcategory` FOREIGN KEY (`parentcategory_id`) REFERENCES `category` (`category_id`) ON DELETE SET NULL\n) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

refund:
'refund', 'CREATE TABLE `refund` (\n  `refund_id` char(36) NOT NULL DEFAULT (uuid()),\n  `order_id` char(36) DEFAULT NULL,\n  `order_item_id` char(36) DEFAULT NULL,\n  `request_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  `status` varchar(50) NOT NULL,\n  `refund_amount` decimal(10,2) NOT NULL,\n  `sm_id` char(36) DEFAULT NULL,\n  PRIMARY KEY (`refund_id`),\n  KEY `order_id` (`order_id`),\n  KEY `order_item_id` (`order_item_id`),\n  KEY `sm_id` (`sm_id`),\n  CONSTRAINT `refund_ibfk_1` FOREIGN KEY (`order_id`) REFERENCES `orders` (`order_id`) ON DELETE CASCADE,\n  CONSTRAINT `refund_ibfk_2` FOREIGN KEY (`order_item_id`) REFERENCES `order_items` (`order_item_id`) ON DELETE CASCADE,\n  CONSTRAINT `refund_ibfk_3` FOREIGN KEY (`sm_id`) REFERENCES `sales_managers` (`sm_id`) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

refunds:
'refunds', 'CREATE TABLE `refunds` (\n  `refund_id` varchar(36) NOT NULL,\n  `order_id` varchar(36) NOT NULL,\n  `product_id` varchar(36) NOT NULL,\n  `refund_amount` decimal(10,2) NOT NULL,\n  `refund_date` datetime NOT NULL,\n  PRIMARY KEY (`refund_id`),\n  KEY `order_id` (`order_id`),\n  KEY `product_id` (`product_id`),\n  CONSTRAINT `refunds_ibfk_1` FOREIGN KEY (`order_id`) REFERENCES `orders` (`order_id`),\n  CONSTRAINT `refunds_ibfk_2` FOREIGN KEY (`product_id`) REFERENCES `products` (`product_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

shoppingcart:
'shoppingcart', 'CREATE TABLE `shoppingcart` (\n  `cart_id` char(36) NOT NULL DEFAULT (uuid()),\n  `customer_id` char(36) DEFAULT NULL,\n  `cart_status` varchar(50) NOT NULL,\n  PRIMARY KEY (`cart_id`),\n  KEY `customer_id` (`customer_id`),\n  CONSTRAINT `shoppingcart_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customers` (`user_id`) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'


shoppingcart_item:
'shoppingcart_item', 'CREATE TABLE `shoppingcart_item` (\n  `shopping_cart_item_id` char(36) NOT NULL DEFAULT (uuid()),\n  `cart_id` char(36) DEFAULT NULL,\n  `product_id` char(36) DEFAULT NULL,\n  `quantity` int NOT NULL DEFAULT \'1\',\n  PRIMARY KEY (`shopping_cart_item_id`),\n  KEY `cart_id` (`cart_id`),\n  KEY `product_id` (`product_id`),\n  CONSTRAINT `shoppingcart_item_ibfk_1` FOREIGN KEY (`cart_id`) REFERENCES `shoppingcart` (`cart_id`) ON DELETE CASCADE,\n  CONSTRAINT `shoppingcart_item_ibfk_2` FOREIGN KEY (`product_id`) REFERENCES `products` (`product_id`) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'


review:
'review', 'CREATE TABLE `review` (\n  `review_id` char(36) NOT NULL DEFAULT (uuid()),\n  `customer_id` char(36) DEFAULT NULL,\n  `product_id` char(36) DEFAULT NULL,\n  `rating` int NOT NULL,\n  `comment` text,\n  `pm_id` char(36) DEFAULT NULL,\n  `approval_status` varchar(50) NOT NULL,\n  PRIMARY KEY (`review_id`),\n  KEY `customer_id` (`customer_id`),\n  KEY `product_id` (`product_id`),\n  KEY `pm_id` (`pm_id`),\n  CONSTRAINT `review_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customers` (`user_id`) ON DELETE CASCADE,\n  CONSTRAINT `review_ibfk_2` FOREIGN KEY (`product_id`) REFERENCES `products` (`product_id`) ON DELETE CASCADE,\n  CONSTRAINT `review_ibfk_3` FOREIGN KEY (`pm_id`) REFERENCES `product_managers` (`pm_id`) ON DELETE SET NULL,\n  CONSTRAINT `review_chk_1` CHECK ((`rating` between 1 and 5))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

wishlist:
'wishlist', 'CREATE TABLE `wishlist` (\n  `wishlist_id` char(36) NOT NULL DEFAULT (uuid()),\n  `customer_id` char(36) DEFAULT NULL,\n  `wishlist_status` varchar(50) NOT NULL,\n  PRIMARY KEY (`wishlist_id`),\n  KEY `customer_id` (`customer_id`),\n  CONSTRAINT `wishlist_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customers` (`user_id`) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

wishlist_items:
'wishlist_items', 'CREATE TABLE `wishlist_items` (\n  `wishlist_item_id` char(36) NOT NULL DEFAULT (uuid()),\n  `wishlist_id` char(36) DEFAULT NULL,\n  `product_id` char(36) DEFAULT NULL,\n  PRIMARY KEY (`wishlist_item_id`),\n  KEY `wishlist_id` (`wishlist_id`),\n  KEY `product_id` (`product_id`),\n  CONSTRAINT `wishlist_items_ibfk_1` FOREIGN KEY (`wishlist_id`) REFERENCES `wishlist` (`wishlist_id`) ON DELETE CASCADE,\n  CONSTRAINT `wishlist_items_ibfk_2` FOREIGN KEY (`product_id`) REFERENCES `products` (`product_id`) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'


product_managers:
'product_managers', 'CREATE TABLE `product_managers` (\n  `pm_id` char(36) NOT NULL DEFAULT (uuid()),\n  `name` varchar(50) NOT NULL,\n  `middlename` varchar(50) DEFAULT NULL,\n  `surname` varchar(50) NOT NULL,\n  `email` varchar(100) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `phone_number` varchar(20) DEFAULT NULL,\n  PRIMARY KEY (`pm_id`),\n  UNIQUE KEY `email` (`email`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'


sales_managers:
'sales_managers', 'CREATE TABLE `sales_managers` (\n  `sm_id` char(36) NOT NULL DEFAULT (uuid()),\n  `name` varchar(50) NOT NULL,\n  `middlename` varchar(50) DEFAULT NULL,\n  `surname` varchar(50) NOT NULL,\n  `email` varchar(100) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `phone_number` varchar(20) DEFAULT NULL,\n  PRIMARY KEY (`sm_id`),\n  UNIQUE KEY `email` (`email`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

discount:
'discount', 'CREATE TABLE `discount` (\n  `discount_id` char(36) NOT NULL DEFAULT (uuid()),\n  `product_id` char(36) DEFAULT NULL,\n  `discount_rate` decimal(5,2) NOT NULL,\n  `start_date` datetime NOT NULL,\n  `end_date` datetime NOT NULL,\n  `is_active` tinyint(1) NOT NULL DEFAULT \'1\',\n  PRIMARY KEY (`discount_id`),\n  KEY `product_id` (`product_id`),\n  CONSTRAINT `discount_ibfk_1` FOREIGN KEY (`product_id`) REFERENCES `products` (`product_id`) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'


delivery:
'delivery', 'CREATE TABLE `delivery` (\n  `delivery_id` char(36) NOT NULL DEFAULT (uuid()),\n  `order_id` char(36) DEFAULT NULL,\n  `delivery_status` varchar(50) NOT NULL,\n  `addres_id` char(36) DEFAULT NULL,\n  PRIMARY KEY (`delivery_id`),\n  KEY `order_id` (`order_id`),\n  KEY `addres_id` (`addres_id`),\n  CONSTRAINT `delivery_ibfk_1` FOREIGN KEY (`order_id`) REFERENCES `orders` (`order_id`) ON DELETE CASCADE,\n  CONSTRAINT `delivery_ibfk_2` FOREIGN KEY (`addres_id`) REFERENCES `adres` (`customer_adres_id`) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci'

"""